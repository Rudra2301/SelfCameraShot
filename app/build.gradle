buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {

    flatDir {
        dirs 'libs'
    }
    maven { url 'https://maven.fabric.io/public' }
}




android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId "com.tafayor.selfcamerashot"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 400
        versionName "1.13.0"
    }


    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            buildConfigField "String", "GOOGLE_PLAY_KEY",  "\"" + GOOGLE_PLAY_KEY + "\""

            ext.enableCrashlytics = true

        }

        debug {
            buildConfigField "String", "GOOGLE_PLAY_KEY",  "\"" + GOOGLE_PLAY_KEY + "\""
            ext.enableCrashlytics = false
        }



    }


    sourceSets.main.jni.srcDirs = ['src/main/nojni']

    lintOptions
    {
        abortOnError false
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:22.1.0'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    compile 'com.nononsenseapps:filepicker:2.2.2'
    compile 'org.apmem.tools:layouts:1.10@aar'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

}


tasks.withType(com.android.build.gradle.tasks.PackageApplication)
        {
            pkgTask ->pkgTask.jniFolders = [new File(projectDir, 'src/main/jniLibs')]
        }


if (project.hasProperty('STORE_FILE') &&
        project.hasProperty('STORE_PASSWORD') &&
        project.hasProperty('KEY_ALIAS') &&
        project.hasProperty('KEY_PASSWORD')) {
    android.signingConfigs.release.storeFile = file(STORE_FILE)
    android.signingConfigs.release.storePassword = STORE_PASSWORD
    android.signingConfigs.release.keyAlias = KEY_ALIAS
    android.signingConfigs.release.keyPassword = KEY_PASSWORD
} else {
    buildTypes.release.signingConfig = null
}


